#set par(first-line-indent: 0cm, leading: 0.50em, justify: true)
#set text(lang: "bg", font: "New Computer Modern", hyphenate: false, size: 12pt)
#show raw: set text(font: "New Computer Modern Mono")
#show math.equation: set text(style: "italic")
#show par: set block(spacing: 1.5em)
#show heading: set block(above: 1.4em, below: 1em)
#set heading(supplement: "Глава")

#let атан2 = math.op(math.upright("атан2"))
#let корен = math.sqrt
#let пи = math.pi
#let син = math.op(math.upright("син"))
#let кос = math.op(math.upright("кос"))
#let частно = math.frac
#let съкращаваме = math.cancel

#set heading(numbering: (..nums) => {
	let heading_funcs = (
		(num) => str(num),
		(num) => "абвгдежзийклмнопрстуфхцчшщъьюя".clusters().at(num - 1),
	)
	nums
		.pos()
		.enumerate()
		.map(((depth, num)) => heading_funcs.at(calc.rem-euclid(depth, heading_funcs.len()))(num))
		.join(".")
})

#let todo(content) = text(red, content)

#page[#grid(rows: (1fr, 1fr, 1fr, 1fr, 1fr),
	[
		#set text(14pt)
		#set align(center + top)
		#set par(justify: false)
		#smallcaps[Технологично училище „Електронни системи“ към Технически университет - София]
	],

	[
		#set align(center + horizon)
		#set text(24pt)
		#smallcaps[Дипломна работа]

		#set text(11pt)
		по професия код 481020  „Системен програмист“ \
		специалност код 4810201 „Системно програмиране“
	],

	align(center + horizon)[#set text(14pt); Тема: Мехатронен паяк],

	align(bottom)[#grid(
		columns: (1fr, 1fr),
		align(left)[Дипломант: \ #text(11pt)[Теодор Цветалинов Тотев]],
		align(right)[Дипломен ръководител: \ #text(11pt)[Станислав Николов]],
	)],

	align(center + bottom)[#set text(14pt); #smallcaps[София \ 2024]],
)]

#page[#todo[Задание]]

// #page[Отзив на научния ръководител и предложение за рецензент]
#page[]

#heading(numbering: none)[Увод]
#todo[Кратко въведение в областта ( максимум 1 -2 стр.). В края на увода да бъдат поставени целите и задачите на ДР;]

= Проучване
#todo[Представлява проучвателната част на ДР. Прави се преглед на съществуващи хардуерни разработки, на използваната елементна база, основни принципи и методи за обработка на сигнали и информация ( максимум 8-10 страници) ;]
#todo[esp32]

== Електродвигател
_Електродвигателят_ (още известен като _електромотор_ или просто _мотор_) е машина преобразуваща
електрическата енергия в кинетична такава, най-често чрез електромагнетизъм.
Всеки двигател има подвижна и неподвижна част, наречени съответно _ротор_ и _статор_.
Основната цел на проекта е движението на паяка, следователно трябва да се избере подходящ двигател.
Разглеждат се няколко възможности:

#todo[https://bg.wikipedia.org/wiki/%D0%A1%D0%B5%D1%80%D0%B2%D0%BE%D0%BC%D0%BE%D1%82%D0%BE%D1%80]

=== Постояннотоков двигател
Подвижната част от постояннотоковият двигател представлява електромагнит, а неподвижната - магнит.
Електромагнитът е захранен по такъв начин, че полюсите му съвпадат с тези на магнита.
Поради действащите сили ротора се завърта, а с неговото завъртане полюсите се променят, започвайки процесът наново.

Употребата на двигателят е много лесна: захранва се с определено напрежение.
Посоката на въртене зависи от поляритета на подаденото напрежение.

Не може пряко да се управлява скоростта на движение, което прави този двигател неподходящ за проекта.

#todo[фигура]
#todo[https://bg.wikipedia.org/wiki/%D0%9F%D0%BE%D1%81%D1%82%D0%BE%D1%8F%D0%BD%D0%BD%D0%BE%D1%82%D0%BE%D0%BA%D0%BE%D0%B2_%D0%B5%D0%BB%D0%B5%D0%BA%D1%82%D1%80%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8_%D0%B4%D0%B2%D0%B8%D0%B3%D0%B0%D1%82%D0%B5%D0%BB]

=== Стъпков двигател
#todo[]

=== Серводвигател

_Серводвигателят_ #footnote[Още известен като _сервомотор_ или просто _серво_. Произлиза от латинското #smallcaps[servus] _слуга_. Пълен български превод би бил _служещ двигател_ или _служедвигател_. Такъв превод не е използван в труда, за да не затрудни читателя.]
позволява завъртъне в желано от потребителя положение.
Подвижната част е свързана към неподвижната чрез потенциометър, който измерва действителното положение.
След като сравни желаното с действителното положение, сервото задвижва постояннотоков двигател в нужната посока.
Този принцип на действие кара двигателя да оказва съпротивление, когато се оказва сила върху ротора (напр. тази на гравитацията).

Единствен недостатък на серводвигателя е ограниченият му размах, причинен от потенциометъра в него.
Докато повечето двигатели се въртят безкрайно, сервото има определен ъгъл на завъртане, рядко по-голям от 180°.
Този недостатък не оказва влияние на проекта.

За всички стави на крака е избран серводвигател sg90. Той има следните свойства:
- захранва се на 5В постоянно напрежение
- управлява се чрез широчинно-импулсна модулация (@шим),
- тежи 9г,
- прилага 1,4кгсм тяга,

#todo[какво е потенциометър]
#todo[фигура]
#todo[https://www.ardboard.com/index.php?route=product/product&product_id=61&search=sg90]

== Широчинно-импулсна модулация <шим>
_Широчинно-импулсната модулация_ (накратко _шим_) е подход за предаване на аналогова информация по цифров канал.
Сигналът е с постоянни честота и амплитуда, но с променлива ширина на импулса.
Реципрочната стойност на честотата се нарича _период_ и се мери в секунди.

#todo[фигура]

Избраният за проекта двигател се управлява с шим сигнал с честота 50Хц т.е. с период от 20мс.
По документация #todo[коя], ъглите между 0° и 180° съответстват на времена във високо ниво между 1мс и 2мс.
Експериментите с мотора, както и други клиенти #todo[източник], казват друго - времента във високо ниво са между 0.5мс и 2.5мс.
Точното преобразуване от желан ъгъл към шим сигнал е показано в @серво-контролер.

#todo[източници]

= Изисквания
#todo[Да съдържа функционалните и електрическите изисквания към проектираното устройство (точка 2.1.), блокова схема на устройството, описание на предназначението и функциите на отделните блокове ( максимум 6-8 страници );]
#todo[брой крака]
#todo[ААА срещу гейската литиево-ьонна батерия]
#todo[Комуникация]

= Електроника
#todo[Същинската част на ДР с най - голям обем.  Да включва описание на принципните електрически  схеми на отделните блокове или на цялото устройство, информация за използваната елементна база, изчислителна записка, симулации на цялото устройство или на отделни блокове, графики, характеристики, анализи ( максимум 10-15 страници );]

= Механика
#todo[Да съдържа описание на особеностите при проектирането на печатните платки с конструктивна  CAD система, графичните оригинали на страна елементи и страна спойки, вътрешни и захранващи слоеве на печатните платки, ситопечат, спецификация на елементите и използваните корпуси ( максимум 5-8 страници) ;]
#todo[кад]

= Логика
#todo[Да съдържа описание на алгоритъма и сорс кода на управляващия софтуер със съответна коментарна част и обяснения ( максимум 5-10 страници). ]

== Серво контролер <серво-контролер>

Както пише в @шим, завъртанията между 0° и 180° отговарят на времена на запълване между 0.5мс и 2.5мс:
$
"време на запълване" &= частно("завъртане", 180°) * 2"мс" + 0.5"мс" \
                         &= частно("завъртане" + 45°, 90°)"мс"
$

При есп32 микроконтролера, шим сигнала се управлява чрез параметър `duty_cycle`, който спазва следната закономерност:
$
частно(upright("duty_cycle"), 2^"резолюция") = частно("време на запълване", "период")
$

Знаейки, че $"период" = 20"мс"$, можем да изчислим `duty_cycle`:
$
частно(upright("duty_cycle"), 2^"резолюция") &= частно(частно("завъртане" + 45°, 90°)съкращаваме("мс"), 20съкращаваме("мс")) \
upright("duty_cycle")                        &= частно("завъртане" + 45°, 90°*20) 2^"резолюция"
$

За честота от 50Хц, най-високата възможна резолюция е 20 бита.

https://gist.github.com/benpeoples/3aa57bffc0f26ede6623ca520f26628c
https://raspberrypi.stackexchange.com/questions/106858/what-is-the-proper-calculation-of-duty-cycle-range-for-the-sg90-servo
https://www.friendlywire.com/projects/ne555-servo-safe/SG90-datasheet.pdf

== Обратна кинематика
#todo[какво е обратна кинематика]
Подвижните части на всеки един крак са два кокъла $к_1$ и $к_2$ и три серво мотора $с_0$, $с_1$ и $с_2$.
Задачата е имайки желани кординати $ъ$, $ю$ и $в$ и дължините на костите,
да разберем стойностите на трите серво мотора които ще закарат стъпалото в тези кординати.

#todo[чертеж]
$
с_0 &= атан2(ъ, ю) &upright("по определение") \
р   &= корен(ъ^2 + ю^2) &upright("по питагоровата теорема") \
$

#todo[чертеж]

$
&к = корен(р^2 + в^2) &upright("по питагоровата теорема") \
$

$
&к^2 = к_1^2 + к_2^2 - 2к_1к_2кос(с_2 - пи) &upright("по косинусовата теорема") \
&с_2 = пи + кос^(-1)частно(к^2 - к_1^2 - к_2^2, -2к_1к_2) \
$

$
&theta = атан2(в, р)
$

$
&angle.spheric к_1к_2 = с_1 - theta \
&к_2^2 = к^2 + к_2^2 - 2к к_2кос(с_1 - theta) &upright("по косинусовата теорема") \
&с_1 = theta + кос^(-1)частно(к_2^2 - к^2 - к_1^2, -2к к_1) \
$

#todo[свържи уравненията]

== Походка
#todo[разсъждения върху един следващ крак]

= Изпълнение
#todo[Да съдържа описание и особеностите при създаването на работоспособен модел на проектираното устройство, както и фигури със снимки на външния вид на макета или монтираната печатна платка ( максимум 5-6 страници). Може и да липсва, ако няма разработен макет на устройството;]

файлът `export.sh` е почти като този даден от espresiff освен че задава IDF_PATH и PS1

#heading(numbering: none)[Заключение]
#todo[включва обобщение на постиженията в дипломната работа и виждане за усъвършенстване и обогатяване на разработката – 1 страница;]

#heading(numbering: none)[Литература]
#todo[]

// #bilbliography("")

= Приложения
#todo[]

#outline(title: [Съдържание])
